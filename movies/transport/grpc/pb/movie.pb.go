// Code generated by protoc-gen-go. DO NOT EDIT.
// source: movie.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// SearchMovieRequest represent request for searching movie
type SearchMovieRequest struct {
	SearchWord           string   `protobuf:"bytes,1,opt,name=searchWord,proto3" json:"searchWord,omitempty"`
	Pagination           int64    `protobuf:"varint,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchMovieRequest) Reset()         { *m = SearchMovieRequest{} }
func (m *SearchMovieRequest) String() string { return proto.CompactTextString(m) }
func (*SearchMovieRequest) ProtoMessage()    {}
func (*SearchMovieRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fde087a4194eda75, []int{0}
}

func (m *SearchMovieRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchMovieRequest.Unmarshal(m, b)
}
func (m *SearchMovieRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchMovieRequest.Marshal(b, m, deterministic)
}
func (m *SearchMovieRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchMovieRequest.Merge(m, src)
}
func (m *SearchMovieRequest) XXX_Size() int {
	return xxx_messageInfo_SearchMovieRequest.Size(m)
}
func (m *SearchMovieRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchMovieRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchMovieRequest proto.InternalMessageInfo

func (m *SearchMovieRequest) GetSearchWord() string {
	if m != nil {
		return m.SearchWord
	}
	return ""
}

func (m *SearchMovieRequest) GetPagination() int64 {
	if m != nil {
		return m.Pagination
	}
	return 0
}

// Movie represent attributes of movie
type MovieAttr struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Year                 string   `protobuf:"bytes,2,opt,name=year,proto3" json:"year,omitempty"`
	ImdbID               string   `protobuf:"bytes,3,opt,name=imdbID,proto3" json:"imdbID,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Poster               string   `protobuf:"bytes,5,opt,name=poster,proto3" json:"poster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MovieAttr) Reset()         { *m = MovieAttr{} }
func (m *MovieAttr) String() string { return proto.CompactTextString(m) }
func (*MovieAttr) ProtoMessage()    {}
func (*MovieAttr) Descriptor() ([]byte, []int) {
	return fileDescriptor_fde087a4194eda75, []int{1}
}

func (m *MovieAttr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MovieAttr.Unmarshal(m, b)
}
func (m *MovieAttr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MovieAttr.Marshal(b, m, deterministic)
}
func (m *MovieAttr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MovieAttr.Merge(m, src)
}
func (m *MovieAttr) XXX_Size() int {
	return xxx_messageInfo_MovieAttr.Size(m)
}
func (m *MovieAttr) XXX_DiscardUnknown() {
	xxx_messageInfo_MovieAttr.DiscardUnknown(m)
}

var xxx_messageInfo_MovieAttr proto.InternalMessageInfo

func (m *MovieAttr) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MovieAttr) GetYear() string {
	if m != nil {
		return m.Year
	}
	return ""
}

func (m *MovieAttr) GetImdbID() string {
	if m != nil {
		return m.ImdbID
	}
	return ""
}

func (m *MovieAttr) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *MovieAttr) GetPoster() string {
	if m != nil {
		return m.Poster
	}
	return ""
}

// SearchMovieResponse represent response for searched movie
type SearchMovieResponse struct {
	List                 []*MovieAttr `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	TotalResult          int64        `protobuf:"varint,2,opt,name=totalResult,proto3" json:"totalResult,omitempty"`
	Err                  string       `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SearchMovieResponse) Reset()         { *m = SearchMovieResponse{} }
func (m *SearchMovieResponse) String() string { return proto.CompactTextString(m) }
func (*SearchMovieResponse) ProtoMessage()    {}
func (*SearchMovieResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fde087a4194eda75, []int{2}
}

func (m *SearchMovieResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchMovieResponse.Unmarshal(m, b)
}
func (m *SearchMovieResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchMovieResponse.Marshal(b, m, deterministic)
}
func (m *SearchMovieResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchMovieResponse.Merge(m, src)
}
func (m *SearchMovieResponse) XXX_Size() int {
	return xxx_messageInfo_SearchMovieResponse.Size(m)
}
func (m *SearchMovieResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchMovieResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchMovieResponse proto.InternalMessageInfo

func (m *SearchMovieResponse) GetList() []*MovieAttr {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *SearchMovieResponse) GetTotalResult() int64 {
	if m != nil {
		return m.TotalResult
	}
	return 0
}

func (m *SearchMovieResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*SearchMovieRequest)(nil), "pb.SearchMovieRequest")
	proto.RegisterType((*MovieAttr)(nil), "pb.MovieAttr")
	proto.RegisterType((*SearchMovieResponse)(nil), "pb.SearchMovieResponse")
}

func init() {
	proto.RegisterFile("movie.proto", fileDescriptor_fde087a4194eda75)
}

var fileDescriptor_fde087a4194eda75 = []byte{
	// 260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0x4f, 0x4b, 0xc4, 0x30,
	0x10, 0xc5, 0xe9, 0xf6, 0x0f, 0x74, 0x8a, 0x20, 0xa3, 0xac, 0xc1, 0x83, 0xd4, 0x9e, 0x7a, 0xea,
	0x61, 0x3d, 0x79, 0x54, 0xbc, 0x78, 0xf0, 0x12, 0x05, 0xcf, 0xad, 0x3b, 0x68, 0xa0, 0xdb, 0xc4,
	0x64, 0x56, 0xe8, 0xb7, 0x97, 0x24, 0x45, 0x2a, 0x7b, 0x9b, 0xf9, 0xcd, 0xcb, 0xcb, 0x9b, 0x04,
	0xaa, 0x83, 0xfe, 0x51, 0xd4, 0x19, 0xab, 0x59, 0xe3, 0xc6, 0x0c, 0xcd, 0x1b, 0xe0, 0x2b, 0xf5,
	0xf6, 0xe3, 0xeb, 0xc5, 0x0f, 0x24, 0x7d, 0x1f, 0xc9, 0x31, 0xde, 0x00, 0xb8, 0x40, 0xdf, 0xb5,
	0xdd, 0x8b, 0xa4, 0x4e, 0xda, 0x52, 0xae, 0x88, 0x9f, 0x9b, 0xfe, 0x53, 0x4d, 0x3d, 0x2b, 0x3d,
	0x89, 0x4d, 0x9d, 0xb4, 0xa9, 0x5c, 0x91, 0x66, 0x86, 0x32, 0xf8, 0x3d, 0x30, 0x5b, 0xbc, 0x84,
	0x9c, 0x15, 0x8f, 0xb4, 0xf8, 0xc4, 0x06, 0x11, 0xb2, 0x99, 0x7a, 0x1b, 0x0e, 0x97, 0x32, 0xd4,
	0xb8, 0x85, 0x42, 0x1d, 0xf6, 0xc3, 0xf3, 0x93, 0x48, 0x03, 0x5d, 0x3a, 0xaf, 0xe5, 0xd9, 0x90,
	0xc8, 0xa2, 0xd6, 0xd7, 0x5e, 0x6b, 0xb4, 0x63, 0xb2, 0x22, 0x8f, 0xda, 0xd8, 0x35, 0x23, 0x5c,
	0xfc, 0x5b, 0xc8, 0x19, 0x3d, 0x39, 0xc2, 0x5b, 0xc8, 0x46, 0xe5, 0x58, 0x24, 0x75, 0xda, 0x56,
	0xbb, 0xb3, 0xce, 0x0c, 0xdd, 0x5f, 0x42, 0x19, 0x46, 0x58, 0x43, 0xc5, 0x9a, 0xfb, 0x51, 0x92,
	0x3b, 0x8e, 0xbc, 0x6c, 0xb5, 0x46, 0x78, 0x0e, 0x29, 0x59, 0xbb, 0x84, 0xf3, 0xe5, 0xee, 0x11,
	0xf2, 0x60, 0x83, 0xf7, 0x50, 0xc4, 0x6b, 0x71, 0xeb, 0xbd, 0x4f, 0xdf, 0xf4, 0xfa, 0xea, 0x84,
	0xc7, 0x68, 0x43, 0x11, 0x7e, 0xe3, 0xee, 0x37, 0x00, 0x00, 0xff, 0xff, 0xb6, 0x96, 0x2c, 0x44,
	0x9c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MovieClient is the client API for Movie service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MovieClient interface {
	Search(ctx context.Context, in *SearchMovieRequest, opts ...grpc.CallOption) (*SearchMovieResponse, error)
}

type movieClient struct {
	cc grpc.ClientConnInterface
}

func NewMovieClient(cc grpc.ClientConnInterface) MovieClient {
	return &movieClient{cc}
}

func (c *movieClient) Search(ctx context.Context, in *SearchMovieRequest, opts ...grpc.CallOption) (*SearchMovieResponse, error) {
	out := new(SearchMovieResponse)
	err := c.cc.Invoke(ctx, "/pb.Movie/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MovieServer is the server API for Movie service.
type MovieServer interface {
	Search(context.Context, *SearchMovieRequest) (*SearchMovieResponse, error)
}

// UnimplementedMovieServer can be embedded to have forward compatible implementations.
type UnimplementedMovieServer struct {
}

func (*UnimplementedMovieServer) Search(ctx context.Context, req *SearchMovieRequest) (*SearchMovieResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}

func RegisterMovieServer(s *grpc.Server, srv MovieServer) {
	s.RegisterService(&_Movie_serviceDesc, srv)
}

func _Movie_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchMovieRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MovieServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Movie/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MovieServer).Search(ctx, req.(*SearchMovieRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Movie_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Movie",
	HandlerType: (*MovieServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _Movie_Search_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "movie.proto",
}
